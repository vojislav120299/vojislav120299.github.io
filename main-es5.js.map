{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/accordion/index.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","forRoot","declarations","imports","providers","bootstrap","AppRoutes","path","component","children","redirectTo","pathMatch","loadChildren","m","OrderListModule","DemoMaterialModule","FullComponent","changeDetectorRef","media","menuItems","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","AppHeaderComponent","AppSidebarComponent","AccordionDirective","router","navlinks","setTimeout","checkOpenLinks","selectedLink","forEach","link","selected","push","index","indexOf","splice","group","routeUrl","url","currentUrl","split","closeOtherLinks","events","pipe","event","subscribe","AccordionAnchorDirective","navlink","toggle","AccordionLinkDirective","nav","_selected","addLink","removeGroup","value","MENUITEMS","state","name","type","icon","MenuItems","SharedModule","SpinnerComponent","document","isSpinnerVisible","backgroundColor","template","encapsulation","None","Document","environment","production","err","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<router-outlet><app-spinner></app-spinner></router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { HashLocationStrategy, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    RouterModule.forRoot(AppRoutes)\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: HashLocationStrategy\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\n\r\nexport const AppRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/orderlist',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'orderlist',\r\n        loadChildren: () => import('./orderList/orderList.module').then(m => m.OrderListModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport {ChangeDetectorRef, Component,OnDestroy,AfterViewInit} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\n\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {}\r\n}\r\n","<div class=\"main-container\">\r\n    <mat-toolbar style=\"background-color: black;\" class=\"topbar telative\">\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">\r\n                <b>\r\n                    <img src=\"assets/images/firmLogo.png\" style=\"height: -webkit-fill-available;\" fxShow=\"false\"\r\n                        fxShow.gt-xs alt=\"homepage\" class=\"light-logo\">\r\n                </b>\r\n                <span fxShow=\"false\" fxShow.gt-xs>\r\n                </span> </a>\r\n        </div>\r\n        <button mat-icon-button style=\"color: white\" (click)=\"snav.toggle()\" value=\"sidebarclosed\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <span fxFlex></span>\r\n        <app-header></app-header>\r\n    </mat-toolbar>\r\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\r\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\"\r\n            fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\">\r\n            <app-sidebar></app-sidebar>\r\n        </mat-sidenav>\r\n        <mat-sidenav-content class=\"page-wrapper\">\r\n            <div class=\"page-content\">\r\n                <router-outlet>\r\n                    <app-spinner></app-spinner>\r\n                </router-outlet>\r\n            </div>\r\n        </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {}\r\n","        \r\n<!-- ============================================================== -->\r\n<!-- Profile - style you can find in header.scss -->\r\n<!-- ============================================================== -->\r\n<mat-menu style=\"background-color: black;\" #profile=\"matMenu\" class=\"mymegamenu\">\r\n\r\n</mat-menu>\r\n\r\n","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- sidebar -->\r\n<!-- ============================================================== -->\r\n <div class=\"user-profile\">\r\n    <!-- User profile image -->\r\n    <!-- <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div> -->\r\n    <!-- User profile text-->\r\n    <!-- ============================================================== -->\r\n    <!-- Profile - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <!-- <div class=\"profile-text\">\r\n        <h3 style=\"margin-left: 10px;\">Orders app</h3>\r\n    </div> -->\r\n    <!-- <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n            <mat-icon>settings</mat-icon> Settings </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>account_box</mat-icon> Profile </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n    </mat-menu> -->\r\n    \r\n</div>\r\n<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\r\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \r\n            <span>{{ menuitem.name }}</span> \r\n            <span fxFlex></span> \r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \r\n        </a>\r\n\r\n        \r\n    </mat-list-item>\r\n\r\n</mat-nav-list>","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n  {state: 'orderlist', name: 'Order List', type: 'link', icon: 'note'},\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}